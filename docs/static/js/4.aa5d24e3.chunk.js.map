{"version":3,"sources":["hooks/useIsNight.js","look-and-feel/other/sun.jpg","look-and-feel/other/moon.jpg","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","look-and-feel/other/Scenery.jsx","look-and-feel/other/index.js"],"names":["useIsNight","useContext","IsNightContext","module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","style","height","Scenery","isNight","toggleIsNight","backgroundImage","moon","sun","onClick"],"mappings":"uIAAA,oDAGaA,EAAa,WACtB,OAAOC,qBAAWC,MAGPF,O,mBCPfG,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,gCCA5B,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,qEC1BHQ,EAAQ,CACZC,OAAQ,QAWKC,EARC,WAAO,IAAD,EACepC,cAA3BqC,EADY,EACZA,QAASC,EADG,EACHA,cAEjB,OACE,yBAAKJ,MAAK,KAAOA,EAAP,CAAcK,gBAAgB,OAAD,OAASF,EAAUG,IAAOC,IAA1B,OAAoCC,QAASJ,KCfxF","file":"static/js/4.aa5d24e3.chunk.js","sourcesContent":["import { useContext } from 'react';\nimport IsNightContext from '../contexts/IsNightContext';\n\nexport const useIsNight = () => {\n    return useContext(IsNightContext);\n}\n\nexport default useIsNight","module.exports = __webpack_public_path__ + \"static/media/sun.e0e99dbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moon.7cecd6f9.jpg\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\n\nimport useIsNight from 'hooks/useIsNight';\n\nimport sun from './sun.jpg';\nimport moon from './moon.jpg';\n\nconst style = {\n  height: \"100%\",\n};\n\nconst Scenery = () => {\n  const { isNight, toggleIsNight } = useIsNight();\n\n  return (\n    <div style={{ ...style, backgroundImage: `url(${isNight ? moon : sun})` }} onClick={toggleIsNight} />\n  )\n}\n\nexport default Scenery\n","export { default } from './Scenery';"],"sourceRoot":""}